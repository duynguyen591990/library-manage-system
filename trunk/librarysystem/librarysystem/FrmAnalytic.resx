<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnTopBorrow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IE1hY2ludG9zaCIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDpEOEJCOEEyNDBDNDQxMUUwQUExOENCNTFGNkM1RjFGNiIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDpEOEJCOEEyNTBDNDQxMUUwQUExOENCNTFGNkM1RjFGNiI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOkQ4QkI4QTIyMEM0NDExRTBBQTE4Q0I1MUY2QzVG
        MUY2IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkQ4QkI4QTIzMEM0NDExRTBBQTE4Q0I1MUY2QzVG
        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
        ZPJ/t6TRWBtiuAUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnTopBook.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAbCAYAAACJISRoAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IE1hY2ludG9zaCIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDpEOEJCOEEyODBDNDQxMUUwQUExOENCNTFGNkM1RjFGNiIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDpEOEJCOEEyOTBDNDQxMUUwQUExOENCNTFGNkM1RjFGNiI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOkQ4QkI4QTI2MEM0NDExRTBBQTE4Q0I1MUY2QzVG
        MUY2IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkQ4QkI4QTI3MEM0NDExRTBBQTE4Q0I1MUY2QzVG
        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
</value>
  </data>
</root>